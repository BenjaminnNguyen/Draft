package org.selenium.automationtest.testsuite;

import org.openqa.selenium.By;
import org.selenium.automationtest.common.CommonBase;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;
import org.selenium.automationtest.common.JDBCConnectManagement;
import org.selenium.automationtest.common.ManageAccount;

import static org.selenium.automationtest.common.TestLogger.info;

public final class TS_HDDT_HoaDonDaPhatHanh_LapHoaDon extends CommonBase {
  private ManageAccount account;

  private JDBCConnectManagement db;

  @BeforeMethod
  public void init() {
    driver = initDriverTest();
    account = new ManageAccount(driver);
    db = new JDBCConnectManagement();
    String pass = decrypt("224f2e0b8e248d03ba9f694f9eaca576");
    account.login("0100109106-710", pass);}

  @AfterMethod
  public void after() {
    quitDriver(driver);}

  @Test
  public void TC_001_LapHoaDon_01GTKT_0239_ThueDong() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/239", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "10000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*10000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "5%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "Không thuế");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    String tienThue4 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "4");
    selectValueFromDropdown(tienThue4, "10%");
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String tienThue5 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "5");
    selectValueFromDropdown(tienThue5, "Không thuế");
    waitForPageLoaded(driver);
    String thanhTienThue5 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "5");
    String getThanhTienThue5 = getValue(thanhTienThue5);
    String getThanhTienThue5NoDot = trimCharactor(getThanhTienThue5, ".");
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(getThanhTienThue1NoDot+"+"+getThanhTienThue2NoDot+"+"+getThanhTienThue5NoDot+"-"+getThanhTienThue3NoDot);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    waitForPageLoaded(driver);
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/239", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_002_LapHoaDon_2_006_BanHang() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "2/006", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "10000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*10000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "10000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*10000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+0);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    waitForPageLoaded(driver);
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "2/006", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, "0");
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_003_LapHoaDon_01GTKT0_025_ChietKhauDongHangHoa() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "10000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*10000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String CK11Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "1");
    String getCK11 = getValue(CK11Val);
    String getCK11NoDot = trimCharactor(getCK11, ".");
    String CK21Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "1");
    String getCK21 = getValue(CK21Val);
    String getCK21NoDot = trimCharactor(getCK21, ".");
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String CK12 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "1");
    type(CK12, "10", false);
    String CK22 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "1");
    type(CK22, "10", false);
    String CK12Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "2");
    String getCK12 = getValue(CK12Val);
    String getCK12NoDot = trimCharactor(getCK12, ".");
    String CK22Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "2");
    String getCK22 = getValue(CK22Val);
    String getCK22NoDot = trimCharactor(getCK22, ".");
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "5%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "Không thuế");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "Ghi chú", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    String CK14 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "3");
    type(CK14, "5", false);
    String CK24 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "3");
    type(CK24, "10", false);
    String tienThue4 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "4");
    selectValueFromDropdown(tienThue4, "10%");
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String CK15 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "4");
    type(CK15, "5", false);
    String CK25 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "4");
    type(CK25, "0", false);
    String CK15Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "5");
    String getCK15 = getValue(CK15Val);
    String getCK15NoDot = trimCharactor(getCK15, ".");
    String CK25Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "5");
    String getCK25 = getValue(CK25Val);
    String getCK25NoDot = trimCharactor(getCK25, ".");
    String tienThue5 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "5");
    selectValueFromDropdown(tienThue5, "Không thuế");
    waitForPageLoaded(driver);
    String thanhTienThue5 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "5");
    String getThanhTienThue5 = getValue(thanhTienThue5);
    String getThanhTienThue5NoDot = trimCharactor(getThanhTienThue5, ".");
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String ChietKhauTruocThue = evaluate(thanhTien3Eval+"+"+getCK11NoDot+"+"+getCK21NoDot+"+"+getCK12NoDot+"+"+getCK22NoDot+"+"+getCK15NoDot+"+"+getCK25NoDot);
    String getChietKhauTruocThue = getValue(By.xpath("//*[contains(text(),'Chiết khấu trước thuế')]//following-sibling::div/input"));
    String getChietKhauTruocThueNoDot = trimCharactor(getChietKhauTruocThue, ".");
    verifyCompare(ChietKhauTruocThue, getChietKhauTruocThueNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+ChietKhauTruocThue);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(getThanhTienThue1NoDot+"+"+getThanhTienThue2NoDot+"+"+getThanhTienThue5NoDot+"-"+getThanhTienThue3NoDot);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/025", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_004_LapHoaDon_01GTKT0_238_ThueTongCoChietKhauSauThue() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/238", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT1 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT1, "Không kê khai");
    String ThueGTGT2 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "2");
    click(By.xpath("//*[contains(text(),'Thuế GTGT')]//following-sibling::div/a/i"));
    selectValueFromDropdown(ThueGTGT2, "Không thuế");
    String ThueGTGT3 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "3");
    click(By.xpath("//*[contains(text(),'Thuế GTGT')]//following-sibling::div/a/i"));
    selectValueFromDropdown(ThueGTGT3, "0%");
    String ThueGTGT3val = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "3");
    String getGTGT3 = getValue(ThueGTGT3val);
    String ThueGTGT4 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "4");
    click(By.xpath("//*[contains(text(),'Thuế GTGT')]//following-sibling::div/a/i"));
    selectValueFromDropdown(ThueGTGT4, "5%");
    String ThueGTGT4val = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "4");
    String getGTGT4 = getValue(ThueGTGT4val);
    String getGTGT4NoDot = trimCharactor(getGTGT4, ".");
    String ThueGTGT5 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "5");
    click(By.xpath("//*[contains(text(),'Thuế GTGT')]//following-sibling::div/a/i"));
    selectValueFromDropdown(ThueGTGT5, "10%");
    String ThueGTGT5val = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "5");
    String getGTGT5 = getValue(ThueGTGT5val);
    String getGTGT5NoDot = trimCharactor(getGTGT5, ".");
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    String TongTienThue = evaluate(getGTGT3+"+"+getGTGT4NoDot+"+"+getGTGT5NoDot);
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    type(By.xpath("//*[contains(text(),'Chiết khấu sau thuế')]//following-sibling::div//input"), "100000", false);
    pause(1000);
    String TongTienThanhToan = evaluate(TongTienSauThue+"-"+100000);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    waitForPageLoaded(driver);
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/238", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienThanhToan);}

  @Test
  public void TC_005_LapHoaDon_01GTKT0_282_DienNuoc() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/282", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    type(By.xpath("//*[contains(text(),'Tháng')]//following-sibling::div[1]/input"), "1", true);
    type(By.xpath("//*[contains(text(),'Năm')]//following-sibling::div[1]/input"), "2021", true);
    type(By.xpath("//*[contains(text(),'Số hộ sử dụng')]//following-sibling::div[1]/input"), "1", true);
    type(By.xpath("//*[contains(text(),'Khối - sổ đọc')]//following-sibling::div[1]/input"), "1", true);
    type(By.xpath("//*[contains(text(),'Thời gian sử dụng từ ngày')]//following-sibling::div[1]//input"), "01/01/2021", true);
    type(By.xpath("//*[contains(text(),'Thời gian sử dụng đến ngày')]//following-sibling::div//input"), "01/02/2021", true);
    click(By.xpath("//*[contains(text(),'Hành động')]/following::tr[1]/td[7]//button"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hành động')]/following::tr[1]/td[7]//button"));
    type(By.xpath("//*[contains(text(),'Bộ CS')]/following::tr[1]/td[2]/input"), "bosc1", true);
    type(By.xpath("//*[contains(text(),'Chỉ số cũ')]/following::tr[1]/td[3]/input"), "1", true);
    type(By.xpath("//*[contains(text(),'Chỉ số mới')]/following::tr[1]/td[4]/input"), "10", true);
    type(By.xpath("//*[contains(text(),'HS nhân')]/following::tr[1]/td[5]/input"), "1", true);
    type(By.xpath("//*[contains(text(),'Số điện năng/ Số nước TT')]/following::tr[1]/td[6]/input"), "10", true);
    waitForPageLoaded(driver);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT1 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT1, "5%");
    String ThueGTGTval = evaluate(TongTienTruocThue+"*0.05");
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(ThueGTGTval, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+ThueGTGTval);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    type(By.xpath("//*[contains(text(),'Chiết khấu sau thuế')]//following-sibling::div//input"), "100000", false);
    String TongTienThanhToan = evaluate(TongTienSauThue+"-"+100000);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/282", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, ThueGTGTval);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienThanhToan);}

  @Test
  public void TC_006_LapHoaDon_01GTKT0_025_MauTD_SuaTienThueTrenTungDongHH_NhoHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String CK11Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "1");
    String getCK11 = getValue(CK11Val);
    String getCK11NoDot = trimCharactor(getCK11, ".");
    String CK21Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "1");
    String getCK21 = getValue(CK21Val);
    String getCK21NoDot = trimCharactor(getCK21, ".");
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String TienThueChenhLech1 = evaluate(getThanhTienThue1NoDot +"+20000-1");
    type(thanhTienThue1, TienThueChenhLech1, false);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "200000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*200000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String CK12 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "1");
    type(CK12, "10", false);
    String CK22 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "1");
    type(CK22, "10", false);
    String CK12Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "2");
    String getCK12 = getValue(CK12Val);
    String getCK12NoDot = trimCharactor(getCK12, ".");
    String CK22Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "2");
    String getCK22 = getValue(CK22Val);
    String getCK22NoDot = trimCharactor(getCK22, ".");
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"-20000 +1");
    type(thanhTienThue2, TienThueChenhLech2, false);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "100000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*100000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "100000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*100000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    String CK14 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "3");
    type(CK14, "5", false);
    String CK24 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "3");
    type(CK24, "10", false);
    String tienThue4 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "4");
    selectValueFromDropdown(tienThue4, "10%");
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String CK15 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "4");
    type(CK15, "5", false);
    String CK25 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "4");
    type(CK25, "0", false);
    String CK15Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "5");
    String getCK15 = getValue(CK15Val);
    String getCK15NoDot = trimCharactor(getCK15, ".");
    String CK25Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "5");
    String getCK25 = getValue(CK25Val);
    String getCK25NoDot = trimCharactor(getCK25, ".");
    String tienThue5 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "5");
    selectValueFromDropdown(tienThue5, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue5 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "5");
    String getThanhTienThue5 = getValue(thanhTienThue5);
    String getThanhTienThue5NoDot = trimCharactor(getThanhTienThue5, ".");
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String ChietKhauTruocThue = evaluate(thanhTien3Eval+"+"+getCK11NoDot+"+"+getCK21NoDot+"+"+getCK12NoDot+"+"+getCK22NoDot+"+"+getCK15NoDot+"+"+getCK25NoDot);
    String getChietKhauTruocThue = getValue(By.xpath("//*[contains(text(),'Chiết khấu trước thuế')]//following-sibling::div/input"));
    String getChietKhauTruocThueNoDot = trimCharactor(getChietKhauTruocThue, ".");
    verifyCompare(ChietKhauTruocThue, getChietKhauTruocThueNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+ChietKhauTruocThue);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(TienThueChenhLech1+"+"+TienThueChenhLech2+"-"+getThanhTienThue3NoDot+"+"+getThanhTienThue5NoDot);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/025", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_007_LapHoaDon_01GTKT0_025_MauTD_SuaTienThueTrenTungDongHH_BangChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String CK11Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "1");
    String getCK11 = getValue(CK11Val);
    String getCK11NoDot = trimCharactor(getCK11, ".");
    String CK21Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "1");
    String getCK21 = getValue(CK21Val);
    String getCK21NoDot = trimCharactor(getCK21, ".");
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String TienThueChenhLech1 = evaluate(getThanhTienThue1NoDot +"+20000");
    type(thanhTienThue1, TienThueChenhLech1, false);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "200000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*200000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String CK12 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "1");
    type(CK12, "10", false);
    String CK22 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "1");
    type(CK22, "10", false);
    String CK12Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "2");
    String getCK12 = getValue(CK12Val);
    String getCK12NoDot = trimCharactor(getCK12, ".");
    String CK22Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "2");
    String getCK22 = getValue(CK22Val);
    String getCK22NoDot = trimCharactor(getCK22, ".");
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"-20000");
    type(thanhTienThue2, TienThueChenhLech2, false);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "100000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*100000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "100000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*100000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    String CK14 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "3");
    type(CK14, "5", false);
    String CK24 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "3");
    type(CK24, "10", false);
    String tienThue4 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "4");
    selectValueFromDropdown(tienThue4, "10%");
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String CK15 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "4");
    type(CK15, "5", false);
    String CK25 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "4");
    type(CK25, "0", false);
    String CK15Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "5");
    String getCK15 = getValue(CK15Val);
    String getCK15NoDot = trimCharactor(getCK15, ".");
    String CK25Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "5");
    String getCK25 = getValue(CK25Val);
    String getCK25NoDot = trimCharactor(getCK25, ".");
    String tienThue5 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "5");
    selectValueFromDropdown(tienThue5, "10%");
    pause(1000);
    String thanhTienThue5 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "5");
    String getThanhTienThue5 = getValue(thanhTienThue5);
    String getThanhTienThue5NoDot = trimCharactor(getThanhTienThue5, ".");
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String ChietKhauTruocThue = evaluate(thanhTien3Eval+"+"+getCK11NoDot+"+"+getCK21NoDot+"+"+getCK12NoDot+"+"+getCK22NoDot+"+"+getCK15NoDot+"+"+getCK25NoDot);
    String getChietKhauTruocThue = getValue(By.xpath("//*[contains(text(),'Chiết khấu trước thuế')]//following-sibling::div/input"));
    String getChietKhauTruocThueNoDot = trimCharactor(getChietKhauTruocThue, ".");
    verifyCompare(ChietKhauTruocThue, getChietKhauTruocThueNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+ChietKhauTruocThue);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(TienThueChenhLech1+"+"+TienThueChenhLech2+"-"+getThanhTienThue3NoDot+"+"+getThanhTienThue5NoDot);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/025", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_008_LapHoaDon_01GTKT0_025_MauTD_SuaTienThueTrenTungDongHH_LonHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String TienThueChenhLech1 = evaluate(getThanhTienThue1NoDot +"+20000+1");
    type(thanhTienThue1, TienThueChenhLech1, false);
    mouseOver(thanhTienThue1, true);
    String thongBaoChenhLech = getText(By.xpath("//ngb-tooltip-window"));
    verifyCompare(thongBaoChenhLech, "Tiền thuế vượt quá chênh lệch cho phép");
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "200000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*200000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String CK12 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "1");
    type(CK12, "10", false);
    String CK22 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "1");
    type(CK22, "10", false);
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"-20000-1");
    type(thanhTienThue2, TienThueChenhLech2, false);
    mouseOver(thanhTienThue2, true);
    String thongBaoChenhLech2 = getText(By.xpath("//ngb-tooltip-window"));
    verifyCompare(thongBaoChenhLech2, "Tiền thuế vượt quá chênh lệch cho phép");
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    mouseOver(thanhTienThue1, true);
    String thongBaoChenhLech3 = getText(By.xpath("//ngb-tooltip-window"));
    verifyCompare(thongBaoChenhLech3, "Tiền thuế vượt quá chênh lệch cho phép");}

  @Test
  public void TC_009_LapHoaDon_01GTKT0_025_MauTD_SuaTienThueTrenTungDongChietKhau_NhoHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "10000000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*10000000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String CK11Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "1");
    String getCK11 = getValue(CK11Val);
    String getCK11NoDot = trimCharactor(getCK11, ".");
    String CK21Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "1");
    String getCK21 = getValue(CK21Val);
    String getCK21NoDot = trimCharactor(getCK21, ".");
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Chiết khấu");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Chiết khấu", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "CK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "1", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "1000000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("1*1000000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"-20000 +1");
    type(thanhTienThue2, TienThueChenhLech2, false);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "1000000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*1000000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    String TienThueChenhLech3 = evaluate(getThanhTienThue3NoDot +"+20000-1");
    type(thanhTienThue3, TienThueChenhLech3, false);
    pause(1000);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(thanhTien1Eval, getTongTienNoDot);
    String ChietKhauTruocThue = evaluate(thanhTien3Eval+"+"+getCK11NoDot+"+"+getCK21NoDot+"+"+thanhTien2Eval);
    String getChietKhauTruocThue = getValue(By.xpath("//*[contains(text(),'Chiết khấu trước thuế')]//following-sibling::div/input"));
    String getChietKhauTruocThueNoDot = trimCharactor(getChietKhauTruocThue, ".");
    verifyCompare(ChietKhauTruocThue, getChietKhauTruocThueNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"-"+ChietKhauTruocThue);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(getThanhTienThue1NoDot+"-"+TienThueChenhLech2+"-"+TienThueChenhLech3);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/025", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_010_LapHoaDon_01GTKT0_025_MauTD_SuaTienThueTrenTungDongChietKhau_BangChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "10000000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*10000000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String CK11Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "1");
    String getCK11 = getValue(CK11Val);
    String getCK11NoDot = trimCharactor(getCK11, ".");
    String CK21Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "1");
    String getCK21 = getValue(CK21Val);
    String getCK21NoDot = trimCharactor(getCK21, ".");
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Chiết khấu");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Chiết khấu", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "CK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "1", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "1000000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("1*1000000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"-20000");
    type(thanhTienThue2, TienThueChenhLech2, false);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "1000000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*1000000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    String TienThueChenhLech3 = evaluate(getThanhTienThue3NoDot +"+20000");
    type(thanhTienThue3, TienThueChenhLech3, false);
    pause(1000);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(thanhTien1Eval, getTongTienNoDot);
    String ChietKhauTruocThue = evaluate(thanhTien3Eval+"+"+getCK11NoDot+"+"+getCK21NoDot+"+"+thanhTien2Eval);
    String getChietKhauTruocThue = getValue(By.xpath("//*[contains(text(),'Chiết khấu trước thuế')]//following-sibling::div/input"));
    String getChietKhauTruocThueNoDot = trimCharactor(getChietKhauTruocThue, ".");
    verifyCompare(ChietKhauTruocThue, getChietKhauTruocThueNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"-"+ChietKhauTruocThue);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(getThanhTienThue1NoDot+"-"+TienThueChenhLech2+"-"+TienThueChenhLech3);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/025", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_011_LapHoaDon_01GTKT0_025_MauTD_SuaTienThueTrenTungDongChietKhau_LonHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "10000000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*10000000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Chiết khấu");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Chiết khấu", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "CK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "1", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "1000000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("1*1000000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"-20000-1");
    type(thanhTienThue2, TienThueChenhLech2, false);
    mouseOver(thanhTienThue2, true);
    String thongBaoChenhLech = getText(By.xpath("//ngb-tooltip-window"));
    verifyCompare(thongBaoChenhLech, "Tiền thuế vượt quá chênh lệch cho phép");
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "1000000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*1000000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    String TienThueChenhLech3 = evaluate(getThanhTienThue3NoDot +"+20000+1");
    type(thanhTienThue3, TienThueChenhLech3, false);
    mouseOver(thanhTienThue3, true);
    String thongBaoChenhLech2 = getText(By.xpath("//ngb-tooltip-window"));
    verifyCompare(thongBaoChenhLech2, "Tiền thuế vượt quá chênh lệch cho phép");
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    scrollToElement(thanhTienThue2);
    mouseOver(thanhTienThue3, true);
    waitForPageLoaded(driver);
    String thongBaoChenhLech3 = getText(By.xpath("//ngb-tooltip-window"));
    verifyCompare(thongBaoChenhLech3, "Tiền thuế vượt quá chênh lệch cho phép");}

  @Test
  public void TC_012_LapHoaDon_01GTKT0_025_MauTD_TongChenhLechThueCuaCacDongHH_NhoHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String CK11Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "1");
    String getCK11 = getValue(CK11Val);
    String getCK11NoDot = trimCharactor(getCK11, ".");
    String CK21Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "1");
    String getCK21 = getValue(CK21Val);
    String getCK21NoDot = trimCharactor(getCK21, ".");
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String TienThueChenhLech1 = evaluate(getThanhTienThue1NoDot +"+20000 - 1");
    type(thanhTienThue1, TienThueChenhLech1, false);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "200000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*200000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String CK12 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "1");
    type(CK12, "10", false);
    String CK22 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "1");
    type(CK22, "10", false);
    String CK12Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "2");
    String getCK12 = getValue(CK12Val);
    String getCK12NoDot = trimCharactor(getCK12, ".");
    String CK22Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "2");
    String getCK22 = getValue(CK22Val);
    String getCK22NoDot = trimCharactor(getCK22, ".");
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"+ 1");
    type(thanhTienThue2, TienThueChenhLech2, false);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "100000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*100000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    String TienThueChenhLech3 = evaluate(getThanhTienThue3NoDot +"- 1");
    type(thanhTienThue3, TienThueChenhLech3, false);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "100000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*100000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    String CK14 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "3");
    type(CK14, "5", false);
    String CK24 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "3");
    type(CK24, "10", false);
    String tienThue4 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "4");
    selectValueFromDropdown(tienThue4, "10%");
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String CK15 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "4");
    type(CK15, "5", false);
    String CK25 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "4");
    type(CK25, "5", false);
    String CK15Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "5");
    String getCK15 = getValue(CK15Val);
    String getCK15NoDot = trimCharactor(getCK15, ".");
    String CK25Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "5");
    String getCK25 = getValue(CK25Val);
    String getCK25NoDot = trimCharactor(getCK25, ".");
    String tienThue5 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "5");
    selectValueFromDropdown(tienThue5, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue5 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "5");
    String getThanhTienThue5 = getValue(thanhTienThue5);
    String getThanhTienThue5NoDot = trimCharactor(getThanhTienThue5, ".");
    String TienThueChenhLech5 = evaluate(getThanhTienThue5NoDot +"-1");
    type(thanhTienThue5, TienThueChenhLech5, false);
    pause(1000);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String ChietKhauTruocThue = evaluate(thanhTien3Eval+"+"+getCK11NoDot+"+"+getCK21NoDot+"+"+getCK12NoDot+"+"+getCK22NoDot+"+"+getCK15NoDot+"+"+getCK25NoDot);
    String getChietKhauTruocThue = getValue(By.xpath("//*[contains(text(),'Chiết khấu trước thuế')]//following-sibling::div/input"));
    String getChietKhauTruocThueNoDot = trimCharactor(getChietKhauTruocThue, ".");
    verifyCompare(ChietKhauTruocThue, getChietKhauTruocThueNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+ChietKhauTruocThue);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(TienThueChenhLech1+"+"+TienThueChenhLech2+"-"+TienThueChenhLech3+"+"+TienThueChenhLech5);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/025", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_013_LapHoaDon_01GTKT0_025_MauTD_TongChenhLechThueCuaCacDongHH_BangChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String CK11Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "1");
    String getCK11 = getValue(CK11Val);
    String getCK11NoDot = trimCharactor(getCK11, ".");
    String CK21Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "1");
    String getCK21 = getValue(CK21Val);
    String getCK21NoDot = trimCharactor(getCK21, ".");
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String TienThueChenhLech1 = evaluate(getThanhTienThue1NoDot +"+20000- 1");
    type(thanhTienThue1, TienThueChenhLech1, false);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "200000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*200000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String CK12 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "1");
    type(CK12, "10", false);
    String CK22 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "1");
    type(CK22, "10", false);
    String CK12Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "2");
    String getCK12 = getValue(CK12Val);
    String getCK12NoDot = trimCharactor(getCK12, ".");
    String CK22Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "2");
    String getCK22 = getValue(CK22Val);
    String getCK22NoDot = trimCharactor(getCK22, ".");
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"+1");
    type(thanhTienThue2, TienThueChenhLech2, false);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "100000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*100000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    String TienThueChenhLech3 = evaluate(getThanhTienThue3NoDot +"-1");
    type(thanhTienThue3, TienThueChenhLech3, false);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "100000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*100000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    String CK14 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "3");
    type(CK14, "5", false);
    String CK24 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "3");
    type(CK24, "10", false);
    String tienThue4 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "4");
    selectValueFromDropdown(tienThue4, "10%");
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String CK15 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "4");
    type(CK15, "5", false);
    String CK25 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "4");
    type(CK25, "5", false);
    String CK15Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue-')]", "5");
    String getCK15 = getValue(CK15Val);
    String getCK15NoDot = trimCharactor(getCK15, ".");
    String CK25Val = parseStringToObject("//tr[&option]//input[contains(@name,'discountValue2-')]", "5");
    String getCK25 = getValue(CK25Val);
    String getCK25NoDot = trimCharactor(getCK25, ".");
    String tienThue5 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "5");
    selectValueFromDropdown(tienThue5, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue5 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "5");
    String getThanhTienThue5 = getValue(thanhTienThue5);
    String getThanhTienThue5NoDot = trimCharactor(getThanhTienThue5, ".");
    String TienThueChenhLech5 = evaluate(getThanhTienThue5NoDot +"-1");
    type(thanhTienThue5, TienThueChenhLech5, false);
    pause(1000);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String ChietKhauTruocThue = evaluate(thanhTien3Eval+"+"+getCK11NoDot+"+"+getCK21NoDot+"+"+getCK12NoDot+"+"+getCK22NoDot+"+"+getCK15NoDot+"+"+getCK25NoDot);
    String getChietKhauTruocThue = getValue(By.xpath("//*[contains(text(),'Chiết khấu trước thuế')]//following-sibling::div/input"));
    String getChietKhauTruocThueNoDot = trimCharactor(getChietKhauTruocThue, ".");
    verifyCompare(ChietKhauTruocThue, getChietKhauTruocThueNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+ChietKhauTruocThue);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String TongTienThue = evaluate(TienThueChenhLech1+"+"+TienThueChenhLech2+"-"+TienThueChenhLech3+"+"+TienThueChenhLech5);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(TongTienThanhToan, ".");
    verifyCompare(TongTienSauThue, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/025", true);
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienSauThue);}

  @Test
  public void TC_014_LapHoaDon_01GTKT0_025_MauTD_TongChenhLechThueCuaCacDongHH_LonHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/025", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String CK11 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "0");
    type(CK11, "5", false);
    String CK21 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "0");
    type(CK21, "5", false);
    String tienThue1 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "1");
    selectValueFromDropdown(tienThue1, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue1 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "1");
    String getThanhTienThue1 = getValue(thanhTienThue1);
    String getThanhTienThue1NoDot = trimCharactor(getThanhTienThue1, ".");
    String TienThueChenhLech1 = evaluate(getThanhTienThue1NoDot +"+20000-1");
    type(thanhTienThue1, TienThueChenhLech1, false);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "200000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*200000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String CK12 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "1");
    type(CK12, "10", false);
    String CK22 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "1");
    type(CK22, "10", false);
    String tienThue2 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "2");
    selectValueFromDropdown(tienThue2, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue2 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "2");
    String getThanhTienThue2 = getValue(thanhTienThue2);
    String getThanhTienThue2NoDot = trimCharactor(getThanhTienThue2, ".");
    String TienThueChenhLech2 = evaluate(getThanhTienThue2NoDot +"+1");
    type(thanhTienThue2, TienThueChenhLech2, false);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "100000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*100000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    String tienThue3 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "3");
    selectValueFromDropdown(tienThue3, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue3 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "3");
    String getThanhTienThue3 = getValue(thanhTienThue3);
    String getThanhTienThue3NoDot = trimCharactor(getThanhTienThue3, ".");
    String TienThueChenhLech3 = evaluate(getThanhTienThue3NoDot +"-1");
    type(thanhTienThue3, TienThueChenhLech3, false);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "100000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*100000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    String CK14 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "3");
    type(CK14, "5", false);
    String CK24 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "3");
    type(CK24, "10", false);
    String tienThue4 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "4");
    selectValueFromDropdown(tienThue4, "10%");
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String CK15 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount-&option')]", "4");
    type(CK15, "5", false);
    String CK25 = parseStringToObject("//*[contains(text(),'Chiết khấu')]/../../..//input[contains(@name,'percentDiscount2-&option')]", "4");
    type(CK25, "5", false);
    String tienThue5 = parseStringToObject("//tr[&option]//select[contains(@name,'percentTax')]", "5");
    selectValueFromDropdown(tienThue5, "10%");
    waitForPageLoaded(driver);
    String thanhTienThue5 = parseStringToObject("//tr[&option]//input[contains(@name,'taxAmount')]", "5");
    String getThanhTienThue5 = getValue(thanhTienThue5);
    String getThanhTienThue5NoDot = trimCharactor(getThanhTienThue5, ".");
    String TienThueChenhLech5 = evaluate(getThanhTienThue5NoDot +"+1");
    type(thanhTienThue5, TienThueChenhLech5, false);
    String TongTienThue = evaluate(TienThueChenhLech1+"+"+TienThueChenhLech2+"-"+TienThueChenhLech3+"+"+TienThueChenhLech5);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    waitForPageLoaded(driver);
    String TBChenhLech = getText(By.xpath("//*[@class='toast-message ng-star-inserted']"));
    verifyCompare(TBChenhLech, "Chênh lệch Thuế không thỏa mãn cấu hình");}

  @Test
  public void TC_015_LapHoaDon_01GTKT0_240_ThueTong_ChenhLechThueKhiCo1ThueTong_NhoHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT, "10%");
    String ThueGTGTval = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "1");
    String getGTGT = getValue(ThueGTGTval);
    String getGTGTNoDot = trimCharactor(getGTGT, ".");
    String chenhLechThue = evaluate(getGTGTNoDot+"+20000 -1");
    type(ThueGTGTval, chenhLechThue, false);
    pause(1000);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(chenhLechThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+chenhLechThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = evaluate(TongTienTruocThue+"+"+chenhLechThue);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    waitForPageLoaded(driver);
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, chenhLechThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienThanhToan);}

  @Test
  public void TC_016_LapHoaDon_01GTKT0_240_ThueTong_ChenhLechThueKhiCo1ThueTong_BangChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT, "10%");
    String ThueGTGTval = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "1");
    String getGTGT = getValue(ThueGTGTval);
    String getGTGTNoDot = trimCharactor(getGTGT, ".");
    String chenhLechThue = evaluate(getGTGTNoDot+"+20000");
    type(ThueGTGTval, chenhLechThue, false);
    pause(1000);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(chenhLechThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+chenhLechThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = evaluate(TongTienTruocThue+"+"+chenhLechThue);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    waitForPageLoaded(driver);
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, chenhLechThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienThanhToan);}

  @Test
  public void TC_017_LapHoaDon_01GTKT0_240_ThueTong_ChenhLechThueKhiCo1ThueTong_LonHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT, "10%");
    String ThueGTGTval = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "1");
    String getGTGT = getValue(ThueGTGTval);
    String getGTGTNoDot = trimCharactor(getGTGT, ".");
    String chenhLechThue = evaluate(getGTGTNoDot+"+20000 + 1");
    type(ThueGTGTval, chenhLechThue, false);
    waitForPageLoaded(driver);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(chenhLechThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+chenhLechThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = evaluate(TongTienTruocThue+"+"+chenhLechThue);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    waitForPageLoaded(driver);
    String TBChenhLech = getText(By.xpath("//*[@class='toast-message ng-star-inserted']"));
    verifyCompare(TBChenhLech, "Chênh lệch Thuế không thỏa mãn cấu hình");}

  @Test
  public void TC_018_LapHoaDon_01GTKT0_240_ThueTong_ChenhLechThueKhiCoNhieuThueTong_NhoHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT, "10%");
    String ThueGTGTval = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "1");
    String getGTGT = getValue(ThueGTGTval);
    String getGTGTNoDot = trimCharactor(getGTGT, ".");
    String chenhLechThue = evaluate(getGTGTNoDot+"+20000 -2");
    type(ThueGTGTval, chenhLechThue, false);
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thuế GTGT')]//following-sibling::div/a/i"));
    String ThueGTGT2 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "2");
    selectValueFromDropdown(ThueGTGT2, "10%");
    String ThueGTGT2val = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "2");
    String getGTGT2 = getValue(ThueGTGT2val);
    String getGTGT2NoDot = trimCharactor(getGTGT2, ".");
    String chenhLechThue2 = evaluate(getGTGT2NoDot+"+1");
    type(ThueGTGT2val, chenhLechThue2, false);
    pause(1000);
    String TongTienThue = evaluate(chenhLechThue+"+"+chenhLechThue2);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    waitForPageLoaded(driver);
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    waitForPageLoaded(driver);
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienThanhToan);}

  @Test
  public void TC_019_LapHoaDon_01GTKT0_240_ThueTong_ChenhLechThueKhiCoNhieuThueTong_BangChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT, "10%");
    String ThueGTGTval = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "1");
    String getGTGT = getValue(ThueGTGTval);
    String getGTGTNoDot = trimCharactor(getGTGT, ".");
    String chenhLechThue = evaluate(getGTGTNoDot+"+20000 -1");
    type(ThueGTGTval, chenhLechThue, false);
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thuế GTGT')]//following-sibling::div/a/i"));
    String ThueGTGT2 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "2");
    selectValueFromDropdown(ThueGTGT2, "10%");
    String ThueGTGT2val = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "2");
    String getGTGT2 = getValue(ThueGTGT2val);
    String getGTGT2NoDot = trimCharactor(getGTGT2, ".");
    String chenhLechThue2 = evaluate(getGTGT2NoDot+"+1");
    type(ThueGTGT2val, chenhLechThue2, false);
    pause(1000);
    String TongTienThue = evaluate(chenhLechThue+"+"+chenhLechThue2);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    pause(5000);
    scrollToElement(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    click(By.xpath("//div[@class='modal-footer justify-content-end']//span[text()='Lập hóa đơn']//ancestor::button"));
    waitForPageLoaded(driver);
    click(By.xpath("//button[contains(.,'Đồng ý')]"));
    String ThongBao = getText(By.xpath("//*[contains(text(),'Lập hóa đơn thành công')]"));
    verifyContains("Lập hóa đơn thành công", ThongBao);
    click(By.xpath("//*[contains(text(),'Tìm kiếm nâng cao')]"));
    type(By.xpath("//*[contains(text(),'Tên người mua')]//following-sibling::div/input[@formcontrolname='buyerName']"), "Bao", true);
    type(By.xpath("//*[contains(text(),'Mẫu hóa đơn')]//parent::div//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//div[contains(@class,'ng-dropdown')]//*[contains(@class,'ng-option ng-star')]"));
    String TuNgay = getDateTime("dd/MM/yyyy");
    type(By.xpath("//*[@formcontrolname='fromDate']//input[@name='dp']"), TuNgay, true);
    click(By.xpath("//*[text()='Tìm kiếm']//parent::button"));
    waitForPageLoaded(driver);
    String getTongTienTruocThueKetQua = getText(By.xpath("//span[contains(text(),'Tổng trước thuế')]/../../../..//tr[1]/td[7]"));
    String getTongTienTruocThueKetQuaNoDot = trimCharactor(getTongTienTruocThueKetQua, ".");
    verifyCompare(getTongTienTruocThueKetQuaNoDot, TongTienTruocThue);
    String getTongTienThueKetQua = getText(By.xpath("//span[contains(text(),'Tiền thuế')]/../../../..//tr[1]/td[8]"));
    String getTongTienThueKetQuaNoDot = trimCharactor(getTongTienThueKetQua, ".");
    verifyCompare(getTongTienThueKetQuaNoDot, TongTienThue);
    String getTongTienKetQua = getText(By.xpath("//span[contains(text(),'Tổng tiền')]/../../../..//tr[1]/td[9]"));
    String getTongTienKetQuaNoDot = trimCharactor(getTongTienKetQua, ".");
    verifyCompare(getTongTienKetQuaNoDot, TongTienThanhToan);}

  @Test
  public void TC_020_LapHoaDon_01GTKT0_240_ThueTong_ChenhLechThueKhiCoNhieuThueTong_LonHonChenhLechChoPhep() {
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Quản lý hóa đơn')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Hóa đơn đã phát hành')]"));
    waitForPageLoaded(driver);
    click(By.xpath("//button/*[text()='Lập hóa đơn']"));
    waitForPageLoaded(driver);
    type(By.xpath("//input[contains(@formcontrolname,'buyerName')]"), "Bao", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerAddress')]"), "Ha Noi", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerUnitName')]"), "Viettel", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerTaxCode')]"), "HDLD", true);
    type(By.xpath("//input[contains(@formcontrolname,'buyerEmailAddress')]"), "baonq@viettel.com.vn", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankName')]"), "MBBank", true);
    type(By.xpath("//input[contains(@formcontrolname,'bankAccount')]"), "0000128129999", true);
    type(By.xpath("//ng-select[@bindlabel='invoiceName']//input"), "01GTKT0/240", true);
    waitForPageLoaded(driver);
    click(By.xpath("//ng-dropdown-panel[@class='ng-dropdown-panel ng-star-inserted ng-select-bottom']//following-sibling::div[@class ='ng-option ng-star-inserted ng-option-marked']"));
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Ký hiệu hóa đơn')]//following-sibling::div/ng-select"));
    click(By.xpath("//*[contains(@id,'') and contains(@class,'ng-option')]/span"));
    uploadFile(By.id("uploadFile-fileUpload"), "HDDT_LapHoaDon_File.xlsx");
    waitForPageLoaded(driver);
    String NgayLap = getDateTime("dd/MM/yyyy HH:mm:ss");
    type(By.xpath("//*[contains(text(),'Ngày lập')]//following-sibling::div//input[@name='dp']"), NgayLap, true);
    String tinhChat1 = parseStringToObject("//tbody/tr[&option]//td/select", "1");
    selectValueFromDropdown(tinhChat1, "Hàng hóa");
    String tenHangHoa1 = parseStringToObject("//tr[&option]//input[@id='movies']", "1");
    type(tenHangHoa1, "Hàng hóa", true);
    String maHangHoa1 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "1");
    type(maHangHoa1, "HH1", true);
    String donViTinh1 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "1");
    type(donViTinh1, "Cái", true);
    String soLuong1 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "1");
    type(soLuong1, "1", false);
    String donGia1 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "1");
    type(donGia1, "100000", false);
    String thanhTien1 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "1");
    String getThanhTien1 = getValue(thanhTien1);
    String getThanhTien1NoDot = trimCharactor(getThanhTien1, ".");
    String thanhTien1Eval = evaluate("1*100000");
    verifyCompare(getThanhTien1NoDot, thanhTien1Eval);
    String tinhChat2 = parseStringToObject("//tbody/tr[&option]//td/select", "2");
    selectValueFromDropdown(tinhChat2, "Bảng kê");
    String tenHangHoa2 = parseStringToObject("//tr[&option]//input[@id='movies']", "2");
    type(tenHangHoa2, "Bảng kê", true);
    String maHangHoa2 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "2");
    type(maHangHoa2, "BK1", true);
    String donViTinh2 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "2");
    type(donViTinh2, "Cái", true);
    String soLuong2 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "2");
    type(soLuong2, "10", false);
    String donGia2 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "2");
    type(donGia2, "20000", false);
    String thanhTien2 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "2");
    String getThanhTien2 = getValue(thanhTien2);
    String getThanhTien2NoDot = trimCharactor(getThanhTien2, ".");
    String thanhTien2Eval = evaluate("10*20000");
    verifyCompare(getThanhTien2NoDot, thanhTien2Eval);
    String tinhChat3 = parseStringToObject("//tbody/tr[&option]//td/select", "3");
    selectValueFromDropdown(tinhChat3, "Chiết khấu");
    String tenHangHoa3 = parseStringToObject("//tr[&option]//input[@id='movies']", "3");
    type(tenHangHoa3, "Chiết khấu", true);
    String maHangHoa3 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "3");
    type(maHangHoa3, "CK1", true);
    String donViTinh3 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "3");
    type(donViTinh3, "Cái", true);
    String soLuong3 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "3");
    type(soLuong3, "1", false);
    String donGia3 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "3");
    type(donGia3, "10000", false);
    String thanhTien3 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "3");
    String getThanhTien3 = getValue(thanhTien3);
    String getThanhTien3NoDot = trimCharactor(getThanhTien3, ".");
    String thanhTien3Eval = evaluate("1*10000");
    verifyCompare(getThanhTien3NoDot, thanhTien3Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat4 = parseStringToObject("//tbody/tr[&option]//td/select", "4");
    selectValueFromDropdown(tinhChat4, "Ghi chú");
    String tenHangHoa4 = parseStringToObject("//tr[&option]//input[@id='movies']", "4");
    type(tenHangHoa4, "Ghi chú", true);
    String maHangHoa4 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "4");
    type(maHangHoa4, "GC1", true);
    String donViTinh4 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "4");
    type(donViTinh4, "Cái", true);
    String soLuong4 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "4");
    type(soLuong4, "1", false);
    String donGia4 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "4");
    type(donGia4, "10000", false);
    String thanhTien4 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "4");
    String getThanhTien4 = getValue(thanhTien4);
    String getThanhTien4NoDot = trimCharactor(getThanhTien4, ".");
    String thanhTien4Eval = evaluate("1*10000");
    verifyCompare(getThanhTien4NoDot, thanhTien4Eval);
    click(By.xpath("//*[contains(text(),'Thêm hàng hóa')]"));
    waitForPageLoaded(driver);
    String tinhChat5 = parseStringToObject("//tbody/tr[&option]//td/select", "5");
    selectValueFromDropdown(tinhChat5, "Phí khác");
    String tenHangHoa5 = parseStringToObject("//tr[&option]//input[@id='movies']", "5");
    type(tenHangHoa5, "Phí Khác", true);
    String maHangHoa5 = parseStringToObject("//tr[&option]//input[contains(@name,'productCode')]", "5");
    type(maHangHoa5, "PK1", true);
    String donViTinh5 = parseStringToObject("//tr[&option]//input[contains(@name,'unitName')]", "5");
    type(donViTinh5, "Cái", true);
    String soLuong5 = parseStringToObject("//tr[&option]//input[contains(@name,'quantity')]", "5");
    type(soLuong5, "2", false);
    String donGia5 = parseStringToObject("//tr[&option]//input[contains(@name,'price')]", "5");
    type(donGia5, "50000", false);
    String thanhTien5 = parseStringToObject("//tr[&option]//input[contains(@name,'itemAmountWithoutTax')]", "5");
    String getThanhTien5 = getValue(thanhTien5);
    String getThanhTien5NoDot = trimCharactor(getThanhTien5, ".");
    String thanhTien5Eval = evaluate("2*50000");
    verifyCompare(getThanhTien5NoDot, thanhTien5Eval);
    String TongTien = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval);
    String getTongTien = getValue(By.xpath("//*[contains(text(),'Tổng tiền hàng')]//following-sibling::div/input"));
    String getTongTienNoDot = trimCharactor(getTongTien, ".");
    verifyCompare(TongTien, getTongTienNoDot);
    String TongTienTruocThue = evaluate(thanhTien1Eval+"+"+thanhTien2Eval+"+"+thanhTien5Eval+"-"+thanhTien3Eval);
    String getTongTienTruocThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền trước thuế')]//following-sibling::div/input"));
    String getTongTienTruocThueNoDot = trimCharactor(getTongTienTruocThue, ".");
    verifyCompare(TongTienTruocThue, getTongTienTruocThueNoDot);
    String ThueGTGT = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "1");
    selectValueFromDropdown(ThueGTGT, "10%");
    String ThueGTGTval = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "1");
    String getGTGT = getValue(ThueGTGTval);
    String getGTGTNoDot = trimCharactor(getGTGT, ".");
    String chenhLechThue = evaluate(getGTGTNoDot+"+20000");
    type(ThueGTGTval, chenhLechThue, false);
    waitForPageLoaded(driver);
    click(By.xpath("//*[contains(text(),'Thuế GTGT')]//following-sibling::div/a/i"));
    String ThueGTGT2 = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//select", "2");
    selectValueFromDropdown(ThueGTGT2, "10%");
    String ThueGTGT2val = parseStringToObject("//*[contains(text(),'Thuế GTGT')]/..//div[@class='col-md-7']/div[&option]//input", "2");
    String getGTGT2 = getValue(ThueGTGT2val);
    String getGTGT2NoDot = trimCharactor(getGTGT2, ".");
    String chenhLechThue2 = evaluate(getGTGT2NoDot+"+1");
    type(ThueGTGT2val, chenhLechThue2, false);
    waitForPageLoaded(driver);
    String TongTienThue = evaluate(chenhLechThue+"+"+chenhLechThue2);
    String getTongTienThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền thuế')]//following-sibling::div/input"));
    String getTongTienThueNoDot = trimCharactor(getTongTienThue, ".");
    verifyCompare(TongTienThue, getTongTienThueNoDot);
    String TongTienSauThue = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienSauThue = getValue(By.xpath("//*[contains(text(),'Tổng tiền sau thuế')]//following-sibling::div/input"));
    String getTongTienSauThueNoDot = trimCharactor(getTongTienSauThue, ".");
    verifyCompare(TongTienSauThue, getTongTienSauThueNoDot);
    String TongTienThanhToan = evaluate(TongTienTruocThue+"+"+TongTienThue);
    String getTongTienThanhToan = getValue(By.xpath("//*[contains(text(),'Tổng tiền thanh toán')]//following-sibling::div/input"));
    String TongTienThanhToanNoDot = trimCharactor(getTongTienThanhToan, ".");
    verifyCompare(TongTienThanhToan, TongTienThanhToanNoDot);
    click(By.xpath("//*[contains(text(),'Xem trước')]//ancestor::button"));
    waitForPageLoaded(driver);
    String TBChenhLech = getText(By.xpath("//*[@class='toast-message ng-star-inserted']"));
    verifyCompare(TBChenhLech, "Chênh lệch Thuế không thỏa mãn cấu hình");}
}
